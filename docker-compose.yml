services:
  rathena:
    build: .
    container_name: rathena
    depends_on:
      - mariadb
    ports:
      - "5121:5121"
      - "6121:6121"
      - "6900:6900"
    environment:
      - DB_HOST=mariadb
      - DB_USER=ragnarok
      - DB_PASS=ragnarok
      - DB_NAME=ragnarok
    volumes:
      - ./rathena-conf:/opt/rathena/conf
    command: >
      bash -c "
        echo Cleaning up stale PID files... &&
        rm -f /opt/rathena/.login-server.pid /opt/rathena/.web-server.pid /opt/rathena/.map-server.pid /opt/rathena/.char-server.pid &&
        echo Esperando o banco subir... &&
        sleep 1 &&
        echo '---- CONFIG CHECK ----' &&
        cat /opt/rathena/conf/inter_athena.conf &&
        echo '---- CONFIG LOGIN CHECK ----' &&
        cat /opt/rathena/conf/login_athena.conf &&
        echo '---- CONFIG CHAR CHECK ----' &&
        cat /opt/rathena/conf/char_athena.conf &&
        echo '---- CONFIG MAP CHECK ----' &&
        cat /opt/rathena/conf/map_athena.conf &&
        echo '---- STARTING ----' &&
        cd /opt/rathena &&
        ./athena-start start &&
        tail -f /dev/null"


  mariadb:
    image: mariadb:10.5
    container_name: mariadb
    restart: always
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysql -u ragnarok -pragnarok -h 127.0.0.1 -e 'SELECT 1;'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ragnarok
      MYSQL_USER: ragnarok
      MYSQL_PASSWORD: ragnarok

    volumes:
      - db_data:/var/lib/mysql
      - ./seeds:/docker-entrypoint-initdb.d

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - mariadb
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root

  ro-client:
    build:
      context: ./ro-client
      dockerfile: Dockerfile
    container_name: ro-client
    ports:
      - "3000:80"
      - "5999:5999"
    depends_on:
      - rathena

volumes:
  db_data:
